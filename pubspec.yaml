name: quize_app
description: "A new Flutter project."


publish_to: 'none' # Remove this line if you wish to publish to pub.dev


version: 1.0.0+1

environment:
  sdk: ^3.6.0

dependencies:
  flutter:
    sdk: flutter


  cupertino_icons: ^1.0.8
# Metadata A powerful HTTP networking package, supports Interceptors,  Aborting and canceling a request, Custom adapters, Transformers, etc.
  dio:
#  A predictable state management library that helps implement the BLoC (Business Logic Component) design pattern.
  retrofit:
#  retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  logger:
#    Small, easy to use and extensible logger which prints beautiful log
  json_annotation:
#  Classes and helper functions that support JSON code generation via the `json_serializable` package
  bloc:
#  Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern. Built to be used with the bloc state management package.
  flutter_bloc:
#  Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App"
  get_it:
#  injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart
  injectable:
#    Flutter Secure Storage provides API to store data in secure storage. Keychain is used in iOS, KeyStore based solution is used in Android
  flutter_secure_storage:
#    A flutter plugin for adapting screen and font size.Guaranteed to look good on different models
  flutter_screenutil:
#    flutter_localizations
#  Flutter Localization is a package use for in-app localization with map data. More easier and faster to implement and inspired by the flutter_localizations itself
  flutter_localizations:
    sdk: flutter
  intl: any
#  Flutter package to show beautiful dialogs(INFO,QUESTION,WARNING,SUCCESS,ERROR) with animations as simply as possible
  awesome_dialog:
#    Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player
  lottie:
#    An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 file
  flutter_svg:
#  Flutter library to load and cache network images. Can also be used with placeholder and error widgets
  cached_network_image:
#    A flutter package which will help you to generate pin code fields. Can be useful for OTP for example.
  pin_code_fields:
#Library that allows you to display progress widgets based on percentage, can be Circular or Linear, you can also customize it to your needs.
  percent_indicator:
#    Lightweight and blazing fast key-value database written in pure Dart. Strongly encrypted using AES-256
  hive:
#    Extension for Hive. Makes it easier to use Hive in Flutter apps
  hive_flutter:

dev_dependencies:
  flutter_test:
    sdk: flutter
    ##Metadata
    #A mock framework inspired by Mockito with APIs for Fakes, Mocks, behavior verification, and stubbing.
  mockito:
# injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart.
  injectable_generator:
#  A build system for Dart code generation and modular compilation
  build_runner:
#  retrofit generator is an dio client generator using source_gen and inspired by Chopper and Retrofit
  retrofit_generator:
# Automatically generate code for converting to and from JSON by annotating Dart classes
  json_serializable:
#    A testing library which makes it easy to test blocs. Built to be used with the bloc state management package
  bloc_test:
#    Extension for Hive. Automatically generates TypeAdapters to store any class
  hive_generator:

  flutter_lints: ^5.0.0

flutter:


  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/image/animations/
    - assets/image/icon/


