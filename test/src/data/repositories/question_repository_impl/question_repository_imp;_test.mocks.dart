// Mocks generated by Mockito 5.4.5 from annotations
// in quize_app/test/src/data/repositories/question_repository_impl/question_repository_imp;_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quize_app/src/data/data_source/offline_data_source/result_offline_data_source/model/question/cache_model/question_cache_model.dart'
    as _i7;
import 'package:quize_app/src/data/data_source/online_data_source/question_online_data_source/question_online_data_source.dart'
    as _i3;
import 'package:quize_app/src/data/mappers/question_mapper.dart' as _i5;
import 'package:quize_app/src/data/model/response/question_response_model/question_response_model.dart'
    as _i2;
import 'package:quize_app/src/domain/entities/question_entity.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQuestionResponseModel_0 extends _i1.SmartFake
    implements _i2.QuestionResponseModel {
  _FakeQuestionResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [QuestionOnlineDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionOnlineDataSource extends _i1.Mock
    implements _i3.QuestionOnlineDataSource {
  MockQuestionOnlineDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.QuestionResponseModel> getAllQuestionOnExamById(
          {required String? examId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllQuestionOnExamById,
          [],
          {#examId: examId},
        ),
        returnValue: _i4.Future<_i2.QuestionResponseModel>.value(
            _FakeQuestionResponseModel_0(
          this,
          Invocation.method(
            #getAllQuestionOnExamById,
            [],
            {#examId: examId},
          ),
        )),
      ) as _i4.Future<_i2.QuestionResponseModel>);
}

/// A class which mocks [QuestionMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionMapper extends _i1.Mock implements _i5.QuestionMapper {
  MockQuestionMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i6.QuestionEntity> toListQuestionEntity(
          _i2.QuestionResponseModel? questionResponseModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #toListQuestionEntity,
          [questionResponseModel],
        ),
        returnValue: <_i6.QuestionEntity>[],
      ) as List<_i6.QuestionEntity>);

  @override
  List<_i7.QuestionCacheModel> toListQuestionCachedModel(
          List<_i6.QuestionEntity>? questionEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #toListQuestionCachedModel,
          [questionEntity],
        ),
        returnValue: <_i7.QuestionCacheModel>[],
      ) as List<_i7.QuestionCacheModel>);

  @override
  List<List<_i6.QuestionEntity>> toListQuestionEntityCached(
          List<List<_i7.QuestionCacheModel>>? questionCachedModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #toListQuestionEntityCached,
          [questionCachedModel],
        ),
        returnValue: <List<_i6.QuestionEntity>>[],
      ) as List<List<_i6.QuestionEntity>>);
}
