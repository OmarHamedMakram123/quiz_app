// Mocks generated by Mockito 5.4.5 from annotations
// in quize_app/test/src/data/repositories/auth_repository_impl/auth_repositorty_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:quize_app/src/data/data_source/offline_data_source/auth_offline_data_source/auth_offline_data_source.dart'
    as _i18;
import 'package:quize_app/src/data/data_source/online_data_source/auth_data_source/auth_online_data_source.dart'
    as _i7;
import 'package:quize_app/src/data/mappers/auth_mapper.dart' as _i17;
import 'package:quize_app/src/data/model/request/change_password_request.dart'
    as _i12;
import 'package:quize_app/src/data/model/request/forget_password_request.dart'
    as _i13;
import 'package:quize_app/src/data/model/request/login_request.dart' as _i9;
import 'package:quize_app/src/data/model/request/register_request.dart' as _i10;
import 'package:quize_app/src/data/model/request/reset_password_request.dart'
    as _i15;
import 'package:quize_app/src/data/model/request/update_profile_request.dart'
    as _i11;
import 'package:quize_app/src/data/model/request/verify_reset_code_request.dart'
    as _i14;
import 'package:quize_app/src/data/model/response/app_user_model/app_user_model.dart'
    as _i2;
import 'package:quize_app/src/data/model/response/forget_password_response/forget_password_response_model.dart'
    as _i4;
import 'package:quize_app/src/data/model/response/success_auth_reponse_model/success_auth_response_model.dart'
    as _i3;
import 'package:quize_app/src/domain/entities/app_user_entity.dart' as _i5;
import 'package:quize_app/src/domain/entities/success_auth_entity.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUserModel_0 extends _i1.SmartFake implements _i2.AppUserModel {
  _FakeAppUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuccessAuthResponseModel_1 extends _i1.SmartFake
    implements _i3.SuccessAuthResponseModel {
  _FakeSuccessAuthResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForgetPasswordResponseModel_2 extends _i1.SmartFake
    implements _i4.ForgetPasswordResponseModel {
  _FakeForgetPasswordResponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppUserEntity_3 extends _i1.SmartFake implements _i5.AppUserEntity {
  _FakeAppUserEntity_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuccessAuthEntity_4 extends _i1.SmartFake
    implements _i6.SuccessAuthEntity {
  _FakeSuccessAuthEntity_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthOnlineDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthOnlineDataSource extends _i1.Mock
    implements _i7.AuthOnlineDataSource {
  MockAuthOnlineDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.AppUserModel> login(_i9.LoginRequest? loginRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequest],
        ),
        returnValue: _i8.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #login,
            [loginRequest],
          ),
        )),
      ) as _i8.Future<_i2.AppUserModel>);

  @override
  _i8.Future<_i2.AppUserModel> register(
          _i10.RegisterRequest? registerRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [registerRequest],
        ),
        returnValue: _i8.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #register,
            [registerRequest],
          ),
        )),
      ) as _i8.Future<_i2.AppUserModel>);

  @override
  _i8.Future<_i2.AppUserModel> getProfileDate() => (super.noSuchMethod(
        Invocation.method(
          #getProfileDate,
          [],
        ),
        returnValue: _i8.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #getProfileDate,
            [],
          ),
        )),
      ) as _i8.Future<_i2.AppUserModel>);

  @override
  _i8.Future<_i2.AppUserModel> updateProfile(
          {required _i11.UpdateProfileRequest? updateProfileRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {#updateProfileRequest: updateProfileRequest},
        ),
        returnValue: _i8.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {#updateProfileRequest: updateProfileRequest},
          ),
        )),
      ) as _i8.Future<_i2.AppUserModel>);

  @override
  _i8.Future<_i3.SuccessAuthResponseModel> changePassword(
          {required _i12.ChangePasswordRequest? changePasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {#changePasswordRequest: changePasswordRequest},
        ),
        returnValue: _i8.Future<_i3.SuccessAuthResponseModel>.value(
            _FakeSuccessAuthResponseModel_1(
          this,
          Invocation.method(
            #changePassword,
            [],
            {#changePasswordRequest: changePasswordRequest},
          ),
        )),
      ) as _i8.Future<_i3.SuccessAuthResponseModel>);

  @override
  _i8.Future<_i4.ForgetPasswordResponseModel> forgetPassword(
          {required _i13.ForgetPasswordRequest? forgetPasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [],
          {#forgetPasswordRequest: forgetPasswordRequest},
        ),
        returnValue: _i8.Future<_i4.ForgetPasswordResponseModel>.value(
            _FakeForgetPasswordResponseModel_2(
          this,
          Invocation.method(
            #forgetPassword,
            [],
            {#forgetPasswordRequest: forgetPasswordRequest},
          ),
        )),
      ) as _i8.Future<_i4.ForgetPasswordResponseModel>);

  @override
  _i8.Future<_i3.SuccessAuthResponseModel> verifyResetCode(
          {required _i14.VerifyResetCodeRequest? verifyRestCode}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyResetCode,
          [],
          {#verifyRestCode: verifyRestCode},
        ),
        returnValue: _i8.Future<_i3.SuccessAuthResponseModel>.value(
            _FakeSuccessAuthResponseModel_1(
          this,
          Invocation.method(
            #verifyResetCode,
            [],
            {#verifyRestCode: verifyRestCode},
          ),
        )),
      ) as _i8.Future<_i3.SuccessAuthResponseModel>);

  @override
  _i8.Future<_i3.SuccessAuthResponseModel> resetPassword(
          {required _i15.ResetPasswordRequest? resetPasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {#resetPasswordRequest: resetPasswordRequest},
        ),
        returnValue: _i8.Future<_i3.SuccessAuthResponseModel>.value(
            _FakeSuccessAuthResponseModel_1(
          this,
          Invocation.method(
            #resetPassword,
            [],
            {#resetPasswordRequest: resetPasswordRequest},
          ),
        )),
      ) as _i8.Future<_i3.SuccessAuthResponseModel>);

  @override
  _i8.Future<String> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i8.Future<String>);
}

/// A class which mocks [AuthMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthMapper extends _i1.Mock implements _i17.AuthMapper {
  MockAuthMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.AppUserEntity toAppUserModel(_i2.AppUserModel? appUserModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #toAppUserModel,
          [appUserModel],
        ),
        returnValue: _FakeAppUserEntity_3(
          this,
          Invocation.method(
            #toAppUserModel,
            [appUserModel],
          ),
        ),
      ) as _i5.AppUserEntity);

  @override
  _i6.SuccessAuthEntity toForgetPasswordResponseModel(
          _i4.ForgetPasswordResponseModel? forgetPasswordResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #toForgetPasswordResponseModel,
          [forgetPasswordResponse],
        ),
        returnValue: _FakeSuccessAuthEntity_4(
          this,
          Invocation.method(
            #toForgetPasswordResponseModel,
            [forgetPasswordResponse],
          ),
        ),
      ) as _i6.SuccessAuthEntity);

  @override
  _i6.SuccessAuthEntity toSuccessAuthResponseModel(
          _i3.SuccessAuthResponseModel? successAuthResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #toSuccessAuthResponseModel,
          [successAuthResponse],
        ),
        returnValue: _FakeSuccessAuthEntity_4(
          this,
          Invocation.method(
            #toSuccessAuthResponseModel,
            [successAuthResponse],
          ),
        ),
      ) as _i6.SuccessAuthEntity);
}

/// A class which mocks [AuthOfflineDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthOfflineDataSource extends _i1.Mock
    implements _i18.AuthOfflineDataSource {
  MockAuthOfflineDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> saveToken({required String? token}) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [],
          {#token: token},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
