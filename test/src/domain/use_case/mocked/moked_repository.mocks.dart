// Mocks generated by Mockito 5.4.5 from annotations
// in quize_app/test/src/domain/use_case/mocked/moked_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:quize_app/core/api/common/api_result.dart' as _i4;
import 'package:quize_app/src/data/model/request/change_password_request.dart'
    as _i10;
import 'package:quize_app/src/data/model/request/check_answer_request.dart'
    as _i21;
import 'package:quize_app/src/data/model/request/forget_password_request.dart'
    as _i12;
import 'package:quize_app/src/data/model/request/login_request.dart' as _i6;
import 'package:quize_app/src/data/model/request/register_request.dart' as _i8;
import 'package:quize_app/src/data/model/request/reset_password_request.dart'
    as _i13;
import 'package:quize_app/src/data/model/request/update_profile_request.dart'
    as _i9;
import 'package:quize_app/src/data/model/request/verify_reset_code_request.dart'
    as _i14;
import 'package:quize_app/src/domain/entities/app_user_entity.dart' as _i5;
import 'package:quize_app/src/domain/entities/check_question_entity.dart'
    as _i20;
import 'package:quize_app/src/domain/entities/exam_entity.dart' as _i18;
import 'package:quize_app/src/domain/entities/question_entity.dart' as _i23;
import 'package:quize_app/src/domain/entities/subject_entity.dart' as _i16;
import 'package:quize_app/src/domain/entities/success_auth_entity.dart' as _i11;
import 'package:quize_app/src/domain/repositories/answer_repository.dart'
    as _i19;
import 'package:quize_app/src/domain/repositories/auth_repository.dart' as _i2;
import 'package:quize_app/src/domain/repositories/exam_repository.dart' as _i17;
import 'package:quize_app/src/domain/repositories/question_repository.dart'
    as _i22;
import 'package:quize_app/src/domain/repositories/subject_repository.dart'
    as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.AppUserEntity>> login(
          {required _i6.LoginRequest? loginRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {#loginRequest: loginRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i5.AppUserEntity>>.value(
            _i7.dummyValue<_i4.Result<_i5.AppUserEntity>>(
          this,
          Invocation.method(
            #login,
            [],
            {#loginRequest: loginRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.AppUserEntity>>);

  @override
  _i3.Future<_i4.Result<_i5.AppUserEntity>> register(
          {required _i8.RegisterRequest? registerRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {#registerRequest: registerRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i5.AppUserEntity>>.value(
            _i7.dummyValue<_i4.Result<_i5.AppUserEntity>>(
          this,
          Invocation.method(
            #register,
            [],
            {#registerRequest: registerRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.AppUserEntity>>);

  @override
  _i3.Future<_i4.Result<_i5.AppUserEntity>> getProfileData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileData,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.AppUserEntity>>.value(
            _i7.dummyValue<_i4.Result<_i5.AppUserEntity>>(
          this,
          Invocation.method(
            #getProfileData,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.AppUserEntity>>);

  @override
  _i3.Future<_i4.Result<_i5.AppUserEntity>> updateProfile(
          {required _i9.UpdateProfileRequest? updateProfileRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {#updateProfileRequest: updateProfileRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i5.AppUserEntity>>.value(
            _i7.dummyValue<_i4.Result<_i5.AppUserEntity>>(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {#updateProfileRequest: updateProfileRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.AppUserEntity>>);

  @override
  _i3.Future<_i4.Result<bool>> changePassword(
          {required _i10.ChangePasswordRequest? changePasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {#changePasswordRequest: changePasswordRequest},
        ),
        returnValue:
            _i3.Future<_i4.Result<bool>>.value(_i7.dummyValue<_i4.Result<bool>>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {#changePasswordRequest: changePasswordRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<bool>>);

  @override
  _i3.Future<_i4.Result<_i11.SuccessAuthEntity>> forgetPassword(
          {required _i12.ForgetPasswordRequest? forgetPasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [],
          {#forgetPasswordRequest: forgetPasswordRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>.value(
            _i7.dummyValue<_i4.Result<_i11.SuccessAuthEntity>>(
          this,
          Invocation.method(
            #forgetPassword,
            [],
            {#forgetPasswordRequest: forgetPasswordRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>);

  @override
  _i3.Future<_i4.Result<_i11.SuccessAuthEntity>> resetPassword(
          {required _i13.ResetPasswordRequest? resetPasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {#resetPasswordRequest: resetPasswordRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>.value(
            _i7.dummyValue<_i4.Result<_i11.SuccessAuthEntity>>(
          this,
          Invocation.method(
            #resetPassword,
            [],
            {#resetPasswordRequest: resetPasswordRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>);

  @override
  _i3.Future<_i4.Result<_i11.SuccessAuthEntity>> verifyResetCode(
          {required _i14.VerifyResetCodeRequest? verifyRestCode}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyResetCode,
          [],
          {#verifyRestCode: verifyRestCode},
        ),
        returnValue: _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>.value(
            _i7.dummyValue<_i4.Result<_i11.SuccessAuthEntity>>(
          this,
          Invocation.method(
            #verifyResetCode,
            [],
            {#verifyRestCode: verifyRestCode},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i11.SuccessAuthEntity>>);

  @override
  _i3.Future<_i4.Result<bool>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Result<bool>>.value(_i7.dummyValue<_i4.Result<bool>>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<bool>>);
}

/// A class which mocks [SubjectRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubjectRepository extends _i1.Mock implements _i15.SubjectRepository {
  MockSubjectRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i16.SubjectEntity>>> getAllSubject() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSubject,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i16.SubjectEntity>>>.value(
            _i7.dummyValue<_i4.Result<List<_i16.SubjectEntity>>>(
          this,
          Invocation.method(
            #getAllSubject,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i16.SubjectEntity>>>);
}

/// A class which mocks [ExamRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExamRepository extends _i1.Mock implements _i17.ExamRepository {
  MockExamRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i18.ExamEntity>>> getExamOnSubject(
          {required String? subjectId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExamOnSubject,
          [],
          {#subjectId: subjectId},
        ),
        returnValue: _i3.Future<_i4.Result<List<_i18.ExamEntity>>>.value(
            _i7.dummyValue<_i4.Result<List<_i18.ExamEntity>>>(
          this,
          Invocation.method(
            #getExamOnSubject,
            [],
            {#subjectId: subjectId},
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i18.ExamEntity>>>);
}

/// A class which mocks [AnswerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswerRepository extends _i1.Mock implements _i19.AnswerRepository {
  MockAnswerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i20.CheckQuestionEntity>> checkAnswer(
          {required _i21.CheckAnswerRequest? checkAnswerRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAnswer,
          [],
          {#checkAnswerRequest: checkAnswerRequest},
        ),
        returnValue: _i3.Future<_i4.Result<_i20.CheckQuestionEntity>>.value(
            _i7.dummyValue<_i4.Result<_i20.CheckQuestionEntity>>(
          this,
          Invocation.method(
            #checkAnswer,
            [],
            {#checkAnswerRequest: checkAnswerRequest},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i20.CheckQuestionEntity>>);
}

/// A class which mocks [QuestionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionRepository extends _i1.Mock
    implements _i22.QuestionRepository {
  MockQuestionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i23.QuestionEntity>>> getAllQuestionOnExamById(
          {required String? examId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllQuestionOnExamById,
          [],
          {#examId: examId},
        ),
        returnValue: _i3.Future<_i4.Result<List<_i23.QuestionEntity>>>.value(
            _i7.dummyValue<_i4.Result<List<_i23.QuestionEntity>>>(
          this,
          Invocation.method(
            #getAllQuestionOnExamById,
            [],
            {#examId: examId},
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i23.QuestionEntity>>>);
}
